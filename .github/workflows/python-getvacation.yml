# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: read vacation 

on:
  push:
    # branches: [ master ]
  schedule:
    - cron:  '20 2 * * *' # 오전 11시 20분에 실행. gmt 시간인것으로 보여 수정함. 


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: do check and notify
      id: vac_check
      env:
        SESSION_ID_FOR_HIWORKS_NOTI: ${{ secrets.SESSION_ID_FOR_HIWORKS_NOTI }}
        TELEGRAM_BOT_TOKEN_FOR_HIWORKS_NOTI: ${{ secrets.TELEGRAM_BOT_TOKEN_FOR_HIWORKS_NOTI }}
        TELEGRAM_ID_OF_ADMIN_FOR_HIWORKS_NOTI: ${{ secrets.TELEGRAM_ID_OF_ADMIN_FOR_HIWORKS_NOTI }}
        VACATION_URL_FOR_HIWORKS_NOTI: ${{ secrets.VACATION_URL_FOR_HIWORKS_NOTI }}
        TELEGRAM_GROUP_ID_OF_ADMIN_FOR_HIWORKS_NOTI: ${{ secrets.TELEGRAM_GROUP_ID_OF_ADMIN_FOR_HIWORKS_NOTI}}
        USER_1_NAME_FOR_HIWORKS_NOTI: ${{ secrets.USER_1_NAME_FOR_HIWORKS_NOTI}}
      run: |
        # 실행해보자 
        python ./getVacation.py
    - name: git setting
      run: |
        echo "숫자는? ${{ steps.vac_check.outputs.new_file }} "
        git config --local user.email "your@email"
        git config --local user.name "자동 파싱 이름" # 커밋에 포함될 이름
    - name: git add vac file and commit
      if: ${{ steps.vac_check.outputs.new_file == 'True' }}
      run: |
        echo "숫자는? ${{ steps.vac_check.outputs.new_file }} "
        git add .
        git commit -m "자동 업데이트 진행" # 커밋 메세지
    - name: push
      if: ${{ steps.check_list.outputs.new_file == 'True' }}
      uses: ad-m/github-push-action@master
      with:
        branch: 'vacation_file_test'
        github_token: ${{ secrets.GIT_TOKEN}}
